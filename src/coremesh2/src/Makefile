#############################################################################
# Makefile for building: libcoremesh2.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.7.4) on: pon. lut 20 13:48:51 2012
# Project:  src.pro
# Template: lib
# Command: /usr/bin/qmake -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT
CFLAGS        = -m64 -pipe -O2 -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I. -I../..
LINK          = g++
LFLAGS        = -m64 -Wl,-O1 -shared -Wl,-soname,libcoremesh2.so.1
LIBS          = $(SUBLIBS)    
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = edgelist.cpp \
		elem.cpp \
		elemlist.cpp \
		elemt3n2d.cpp \
		elemt4n3d.cpp \
		facelist.cpp \
		field.cpp \
		fieldsection.cpp \
		geom.cpp \
		grid.cpp \
		gridsection.cpp \
		main.cpp \
		meshobject.cpp \
		node.cpp \
		nodelist.cpp \
		simplefield.cpp \
		simu.cpp \
		stl_grid.cpp \
		voxelcont.cpp 
OBJECTS       = edgelist.o \
		elem.o \
		elemlist.o \
		elemt3n2d.o \
		elemt4n3d.o \
		facelist.o \
		field.o \
		fieldsection.o \
		geom.o \
		grid.o \
		gridsection.o \
		main.o \
		meshobject.o \
		node.o \
		nodelist.o \
		simplefield.o \
		simu.o \
		stl_grid.o \
		voxelcont.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		src.pro
QMAKE_TARGET  = coremesh2
DESTDIR       = ../../bin/
TARGET        = libcoremesh2.so.1.0.0
TARGETA       = ../../bin/libcoremesh2.a
TARGETD       = libcoremesh2.so.1.0.0
TARGET0       = libcoremesh2.so
TARGET1       = libcoremesh2.so.1
TARGET2       = libcoremesh2.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../../bin/$(TARGET)

../../bin/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../../bin/ || $(MKDIR) ../../bin/ 
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../../bin/$(TARGET)
	-$(DEL_FILE) ../../bin/$(TARGET0)
	-$(DEL_FILE) ../../bin/$(TARGET1)
	-$(DEL_FILE) ../../bin/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../../bin/



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: src.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -o Makefile src.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -o Makefile src.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/coremesh21.0.0 || $(MKDIR) .tmp/coremesh21.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/coremesh21.0.0/ && (cd `dirname .tmp/coremesh21.0.0` && $(TAR) coremesh21.0.0.tar coremesh21.0.0 && $(COMPRESS) coremesh21.0.0.tar) && $(MOVE) `dirname .tmp/coremesh21.0.0`/coremesh21.0.0.tar.gz . && $(DEL_FILE) -r .tmp/coremesh21.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../../bin/$(TARGET) 
	-$(DEL_FILE) ../../bin/$(TARGET0) ../../bin/$(TARGET1) ../../bin/$(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

edgelist.o: edgelist.cpp edgelist.h \
		node.h \
		meshobject.h \
		globalmesh.h \
		elemlist.h \
		geom.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o edgelist.o edgelist.cpp

elem.o: elem.cpp elem.h \
		meshobject.h \
		node.h \
		globalmesh.h \
		elemlist.h \
		geom.h \
		edgelist.h \
		facelist.h \
		nodelist.h \
		point.h \
		tri.h \
		grid.h \
		voxelcont.h \
		elemt4n3d.h \
		elemt3n2d.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o elem.o elem.cpp

elemlist.o: elemlist.cpp elemlist.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o elemlist.o elemlist.cpp

elemt3n2d.o: elemt3n2d.cpp elemt3n2d.h \
		elem.h \
		meshobject.h \
		node.h \
		globalmesh.h \
		elemlist.h \
		geom.h \
		edgelist.h \
		facelist.h \
		nodelist.h \
		point.h \
		tri.h \
		grid.h \
		voxelcont.h \
		elemt4n3d.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o elemt3n2d.o elemt3n2d.cpp

elemt4n3d.o: elemt4n3d.cpp elemt4n3d.h \
		elem.h \
		meshobject.h \
		node.h \
		globalmesh.h \
		elemlist.h \
		geom.h \
		edgelist.h \
		facelist.h \
		nodelist.h \
		point.h \
		tri.h \
		grid.h \
		voxelcont.h \
		elemt3n2d.h \
		simplefield.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o elemt4n3d.o elemt4n3d.cpp

facelist.o: facelist.cpp facelist.h \
		node.h \
		meshobject.h \
		globalmesh.h \
		elemlist.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o facelist.o facelist.cpp

field.o: field.cpp field.h \
		simplefield.h \
		grid.h \
		meshobject.h \
		elem.h \
		node.h \
		globalmesh.h \
		elemlist.h \
		geom.h \
		edgelist.h \
		facelist.h \
		nodelist.h \
		point.h \
		tri.h \
		voxelcont.h \
		elemt4n3d.h \
		elemt3n2d.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o field.o field.cpp

fieldsection.o: fieldsection.cpp fieldsection.h \
		grid.h \
		meshobject.h \
		elem.h \
		node.h \
		globalmesh.h \
		elemlist.h \
		geom.h \
		edgelist.h \
		facelist.h \
		nodelist.h \
		point.h \
		tri.h \
		voxelcont.h \
		elemt4n3d.h \
		elemt3n2d.h \
		simplefield.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fieldsection.o fieldsection.cpp

geom.o: geom.cpp geom.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o geom.o geom.cpp

grid.o: grid.cpp grid.h \
		meshobject.h \
		elem.h \
		node.h \
		globalmesh.h \
		elemlist.h \
		geom.h \
		edgelist.h \
		facelist.h \
		nodelist.h \
		point.h \
		tri.h \
		voxelcont.h \
		elemt4n3d.h \
		elemt3n2d.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o grid.o grid.cpp

gridsection.o: gridsection.cpp gridsection.h \
		grid.h \
		meshobject.h \
		elem.h \
		node.h \
		globalmesh.h \
		elemlist.h \
		geom.h \
		edgelist.h \
		facelist.h \
		nodelist.h \
		point.h \
		tri.h \
		voxelcont.h \
		elemt4n3d.h \
		elemt3n2d.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gridsection.o gridsection.cpp

main.o: main.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

meshobject.o: meshobject.cpp meshobject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o meshobject.o meshobject.cpp

node.o: node.cpp node.h \
		meshobject.h \
		globalmesh.h \
		elemlist.h \
		grid.h \
		elem.h \
		geom.h \
		edgelist.h \
		facelist.h \
		nodelist.h \
		point.h \
		tri.h \
		voxelcont.h \
		elemt4n3d.h \
		elemt3n2d.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o node.o node.cpp

nodelist.o: nodelist.cpp nodelist.h \
		edgelist.h \
		node.h \
		meshobject.h \
		globalmesh.h \
		elemlist.h \
		geom.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o nodelist.o nodelist.cpp

simplefield.o: simplefield.cpp simplefield.h \
		grid.h \
		meshobject.h \
		elem.h \
		node.h \
		globalmesh.h \
		elemlist.h \
		geom.h \
		edgelist.h \
		facelist.h \
		nodelist.h \
		point.h \
		tri.h \
		voxelcont.h \
		elemt4n3d.h \
		elemt3n2d.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simplefield.o simplefield.cpp

simu.o: simu.cpp simu.h \
		grid.h \
		meshobject.h \
		elem.h \
		node.h \
		globalmesh.h \
		elemlist.h \
		geom.h \
		edgelist.h \
		facelist.h \
		nodelist.h \
		point.h \
		tri.h \
		voxelcont.h \
		elemt4n3d.h \
		elemt3n2d.h \
		simplefield.h \
		field.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simu.o simu.cpp

stl_grid.o: stl_grid.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o stl_grid.o stl_grid.cpp

voxelcont.o: voxelcont.cpp voxelcont.h \
		geom.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o voxelcont.o voxelcont.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

